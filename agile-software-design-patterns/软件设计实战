软件的质量: 架构设计 + 代码的质量
代码的质量: 代码风格(整洁性/被理解阅读 + 可维护性 + 可扩展性)

软件安全设计:
1. 避免不必要的class对外暴露 => 参考Java Module System
2. 对jar包进行数字签名，避免反编译后的识别
3. 通过SecurityManager设置权限

TODO. 设计案例
1. 大文件的生成，下载和拷贝，在程序运行的过程中，会生成临时文件，用于process的暂停和撤销
2. 软件在启动过程中，会在相同路径下生成.lock锁文件，避免用户进一步的操作
3. 软件交互，复杂的UI列表，可以使用额外静态的.res .xml配置文件进行设置
4. 软件配置文件Configuration Settings，提供软件运行的高级配置
   JAVAHOME=xxx\JAVA\java-11-openjdk-11.0.5.10-2.windows.redhat.x86_64
   JVM_PROPS=-Xmx256M
   BOOT=mxjboot.jar
   SERVER_HOST=hpxxxsrv
   SERVER_PORT=19005
   SITE_NAME=site1
   CLASS_NAME=org.eclipse.core.launcher.Main

TODO. 软件UI界面设计，方便执行Query和数据的显式?
1. 界面Query查询带有where中判断条件(比较，逻辑判断)
   - 封装界面提交的数据成XML, 利用框架转成HQL查询语句, 使用Hibernate执行查询
   - 将界面的数据直接转换成SQL查询语句，JDBC执行查询(使用ORM层中间件)
2. 将查询后的结果展示在界面table列表中，提供筛选和排序等界面操作